{"version":3,"sources":["./src/app/pages/reset-password/reset-password.module.ts","./src/app/pages/reset-password/reset-password.page.ts","./src/app/pages/reset-password/reset-password.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AACE;AACE;AACA;AACE;AACkB;AACvB;AACuB;AACrB;AACQ;AACX;AACuB;AACZ;;;AAElE,MAAM,MAAM,GAAW;IACtB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAiB;KAC5B;CACD,CAAC;AAuBK,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBApBtB;YACR,2DAAW;YACX,4DAAY;YACZ,oEAAa;YACb,sEAAc;YACd,wEAAe;YACf,wEAAe;YACf,4FAAgB;YAChB,4FAAgB;YAChB,0EAAgB;YAChB,qEAAgB;YAChB,4FAAgB;YAChB,gFAAkB;YAClB,mEAAmB;YACnB,4FAAwB;YACxB,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC7B;mIAIW,mBAAmB,mBAHhB,uEAAiB,aAhB/B,2DAAW;QACX,4DAAY;QACZ,oEAAa;QACb,sEAAc;QACd,wEAAe;QACf,wEAAe;QACf,4FAAgB;QAChB,4FAAgB;QAChB,0EAAgB;QAChB,qEAAgB;QAChB,4FAAgB;QAChB,gFAAkB;QAClB,mEAAmB;QACnB,4FAAwB;6FAMb,mBAAmB;cArB/B,sDAAQ;eAAC;gBACT,OAAO,EAAE;oBACR,2DAAW;oBACX,4DAAY;oBACZ,oEAAa;oBACb,sEAAc;oBACd,wEAAe;oBACf,wEAAe;oBACf,4FAAgB;oBAChB,4FAAgB;oBAChB,0EAAgB;oBAChB,qEAAgB;oBAChB,4FAAgB;oBAChB,gFAAkB;oBAClB,mEAAmB;oBACnB,4FAAwB;oBACxB,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC7B;gBACD,YAAY,EAAE,CAAC,uEAAiB,CAAC;aACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpC4D;AACO;;;;;;;;;;;;;;;;;ICgBxD,4EACI;IAAA,uDACJ;IAAA,4DAAY;;;IADR,0DACJ;IADI,6FACJ;;;IAcA,4EACI;IAAA,uDAGJ;IAAA,4DAAY;;;IAHR,0DAGJ;IAHI,0RAGJ;;;IAMA,qFAAgG;;ADlCrG,MAAM,iBAAiB;IAE7B,YAAoB,IAAiB,EAAU,KAAqB,EAAU,KAAmB,EAAU,MAAqB,EAAU,MAAc,EAAU,OAAuB,EAAU,SAA2B;QAA1M,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAkB;QAEvN,SAAI,GAAc,IAAI,wDAAS,CAAC;YACtC,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/C,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,sEAAsE,CAAC,CAAC,CAAC;YACpK,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,sEAAsE,CAAC,CAAC,CAAC;SACxK,CAAC,CAAC;QACI,QAAG,GAAQ,EAAG,CAAC;QAEf,WAAM,GAAQ;YACpB,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;SACX,CAAC;QAEM,kBAAa,GAAQ,EAAE,CAAC;IAjBkM,CAAC;IAmBrN,IAAI;;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrC,MAAM,EAAE;oBACP,KAAK;oBACL,MAAM;oBACN,MAAM;oBACN,OAAO;iBACP;gBACD,KAAK,EAAE,IAAI,CAAC,KAAK;aACjB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,IAAI,QAAQ,CAAC,EAAE,EAAE;gBAChB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;aAC3B;iBAAM;gBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;aACtC;QACF,CAAC;KAAA;IAEY,MAAM;;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;gBAClD,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG;gBACxB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG;gBACxB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;aAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,IAAI,QAAQ,CAAC,EAAE,EAAE;gBAChB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE;wBACvC,WAAW,EAAE;4BACZ,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;4BACrB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;4BAC9B,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,eAAe;yBACtC;wBACD,UAAU,EAAE,IAAI;qBAChB,CAAC,CAAC;iBACH;qBAAM;oBACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE;wBACjC,WAAW,EAAE;4BACZ,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;yBAC9B;wBACD,UAAU,EAAE,IAAI;qBAChB,CAAC,CAAC;iBACH;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aACzC;iBAAM;gBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACxC;QACF,CAAC;KAAA;IAED,QAAQ;QACP,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjE,IAAI,MAAM,EAAE;gBACX,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAC/C,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,WAAW,EAAE;oBAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAClD;gBACD,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,WAAW,EAAE;oBAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACjD;gBACD,IAAI,OAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,WAAW,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;oBACjE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;iBACZ;gBACD,IAAI,MAAM,CAAC,MAAM,IAAI,EAAE,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,WAAW,EAAE;oBACzL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC5B;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACV,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;;kFA1GW,iBAAiB;iGAAjB,iBAAiB;QCf9B,8EACI;QAAA,oEAEA;QAAA,qEACI;QAAA,uDACJ;QAAA,4DAAK;QAEL,qEACI;QAAA,2EACJ;QAAA,4DAAK;QAEL,0EACI;QADqB,kNAAqE,YAAQ,IAAC;QACnG,oFACI;QAAA,4EACI;QAAA,qEACJ;QAAA,4DAAY;QAEZ,uEAEA;QAAA,4EACI;QAAA,kJACJ;QAAA,4DAAW;QAEX,2HACI;QAER,4DAAiB;QAEjB,qFACI;QAAA,6EACI;QAAA,8EACJ;QAAA,4DAAY;QAEZ,uEAEA;QAAA,4EACI;QAAA,kJACJ;QAAA,4DAAW;QAEX,2HACI;QAIR,4DAAiB;QAEjB,6EACI;QAAA,wDAEA;QAAA,iJAAyE;QAC7E,4DAAS;QAET,6EACI;QAAA,kEACJ;QAAA,4DAAS;QACb,4DAAO;QACX,4DAAc;;QAvDL,0DAA+D;QAA/D,6LAA+D;QAGhE,0DACJ;QADI,gHACJ;QAMM,0DAAkB;QAAlB,+EAAkB;QAYL,0DAAkB;QAAlB,gFAAkB;QAgBlB,0DAA8D;QAA9D,oIAA8D;QAQzE,0DAEA;QAFA,gHAEA;QAAyD,0DAAe;QAAf,6EAAe;;6FDlCvE,iBAAiB;cAN7B,uDAAS;eAAC;gBACV,QAAQ,EAAE,qBAAqB;gBAC/B,SAAS,EAAE,CAAC,4BAA4B,CAAC;gBACzC,WAAW,EAAE,4BAA4B;aACzC","file":"pages-reset-password-reset-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BackButtonModule } from 'src/app/libs/back-button/back-button.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatContentModule } from 'src/app/libs/mat-content/mat-content.module';\r\nimport { ResetPasswordPage } from './reset-password.page';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: ResetPasswordPage\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tFormsModule,\r\n\t\tCommonModule,\r\n\t\tMatIconModule,\r\n\t\tMatInputModule,\r\n\t\tMatButtonModule,\r\n\t\tMatSelectModule,\r\n\t\tMatContentModule,\r\n\t\tMatContentModule,\r\n\t\tMatToolbarModule,\r\n\t\tFlexLayoutModule,\r\n\t\tBackButtonModule,\r\n\t\tMatFormFieldModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tRouterModule.forChild(routes)\r\n\t],\r\n\tdeclarations: [ResetPasswordPage]\r\n})\r\n\r\nexport class ResetPasswordModule { }\r\n","import { AppsService } from 'src/app/services/apps/apps.service';\r\nimport { ToastService } from 'src/app/services/toast/toast.service';\r\nimport { ConfigService } from 'src/app/services/config/config.service';\r\nimport { AccountService } from 'src/app/services/account/account.service';\r\nimport { FormErrorService } from 'src/app/services/form-error/form-error.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OnInit, Component, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'reset-password-page',\r\n\tstyleUrls: ['./reset-password.page.scss'],\r\n\ttemplateUrl: './reset-password.page.html'\r\n})\r\n\r\nexport class ResetPasswordPage implements OnInit, OnDestroy {\r\n\r\n\tconstructor(private apps: AppsService, private route: ActivatedRoute, private toast: ToastService, private config: ConfigService, private router: Router, private service: AccountService, private formerror: FormErrorService) { }\r\n\r\n\tpublic form: FormGroup = new FormGroup({\r\n\t\told: new FormControl('', [Validators.required]),\r\n\t\tnew: new FormControl('', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\r\n\t\tuserId: new FormControl('', [Validators.required]),\r\n\t\tconfirm: new FormControl('', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)])\r\n\t});\r\n\tpublic app: any = { };\r\n\tpublic appId: string;\r\n\tpublic errors: any = {\r\n\t\told: '',\r\n\t\tnew: '',\r\n\t\tuserId: '',\r\n\t\tconfirm: ''\r\n\t};\r\n\tpublic loading: boolean;\r\n\tprivate subscriptions: any = {};\r\n\r\n\tprivate async load() {\r\n\t\tthis.loading = true;\r\n\r\n\t\tconst response = await this.apps.load({\r\n\t\t\tfilter: [\r\n\t\t\t\t'url',\r\n\t\t\t\t'icon',\r\n\t\t\t\t'name',\r\n\t\t\t\t'appId'\r\n\t\t\t],\r\n\t\t\tappId: this.appId\r\n\t\t});\r\n\r\n\t\tthis.loading = false;\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tthis.app = response.result;\r\n\t\t} else {\r\n\t\t\tthis.toast.show('Issue loading app!');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async submit() {\r\n\t\tthis.loading = true;\r\n\r\n\t\tconst response = await this.service.changepassword({\r\n\t\t\told: this.form.value.old,\r\n\t\t\tnew: this.form.value.new,\r\n\t\t\tuserId: this.form.value.userId\r\n\t\t});\r\n\r\n\t\tthis.loading = false;\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tif (Object.keys(this.app).includes('url')) {\r\n\t\t\t\tthis.router.navigate(['/allow-access'], {\r\n\t\t\t\t\tqueryParams: {\r\n\t\t\t\t\t\tappId: this.app.appId,\r\n\t\t\t\t\t\tuserId: this.form.value.userId,\r\n\t\t\t\t\t\treturl: this.app.url + '/authenticate'\r\n\t\t\t\t\t},\r\n\t\t\t\t\treplaceUrl: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.router.navigate(['/signin'], {\r\n\t\t\t\t\tqueryParams: {\r\n\t\t\t\t\t\tuserId: this.form.value.userId\r\n\t\t\t\t\t},\r\n\t\t\t\t\treplaceUrl: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.toast.show('Password was changed!');\r\n\t\t} else {\r\n\t\t\tthis.toast.show(response.error.message);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.subscriptions.form = this.form.valueChanges.subscribe(data => {\r\n\t\t\tthis.errors = this.formerror.validateForm(this.form, this.errors, true);\r\n\t\t});\r\n\r\n\t\tthis.subscriptions.loaded = this.config.loaded.subscribe(loaded => {\r\n\t\t\tif (loaded) {\r\n\t\t\t\tconst params = this.route.snapshot.queryParams;\r\n\t\t\t\tif (typeof (params.userId) != 'undefined') {\r\n\t\t\t\t\tthis.form.controls.userId.setValue(params.userId);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof (params.password) != 'undefined') {\r\n\t\t\t\t\tthis.form.controls.old.setValue(params.password);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof(params.appId) != 'undefined' && params.appId !== null) {\r\n\t\t\t\t\tthis.appId = params.appId;\r\n\t\t\t\t\tthis.load();\r\n\t\t\t\t}\r\n\t\t\t\tif (params.userId == '' || params.userId == null || typeof (params.userId) == 'undefined' || params.password == '' || params.password == null || typeof (params.password) == 'undefined') {\r\n\t\t\t\t\tthis.router.navigate(['/']);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.form.unsubscribe();\r\n\t\tthis.subscriptions.loaded.unsubscribe();\r\n\t}\r\n\r\n}\r\n","<mat-content>\r\n    <img [src]=\"app.icon ? app.icon : './assets/icons/icon-512x512.png'\" alt=\"icon\" width=\"100\" height=\"100\">\r\n\r\n    <h1>\r\n        {{ app.name ? app.name : 'Auth' }}\r\n    </h1>\r\n\r\n    <h2>\r\n        Reset Password\r\n    </h2>\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"form.value.new == form.value.confirm && !form.invalid && submit()\">\r\n        <mat-form-field class=\"with-hint\" appearance=\"outline\">\r\n            <mat-label>\r\n                Password\r\n            </mat-label>\r\n\r\n            <input matInput type=\"password\" name=\"new\" minlength=\"8\" placeholder=\"new\" formControlName=\"new\" required>\r\n\r\n            <mat-hint>\r\n                Greater then 8 characters with at least one lowercase, uppercase & special character\r\n            </mat-hint>\r\n\r\n            <mat-error *ngIf=\"errors.new\">\r\n                {{ errors.new }}\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"with-hint\" appearance=\"outline\">\r\n            <mat-label>\r\n                Confirm Password\r\n            </mat-label>\r\n\r\n            <input matInput type=\"password\" name=\"confirm password\" minlength=\"8\" placeholder=\"confirm password\" formControlName=\"confirm\" required>\r\n\r\n            <mat-hint>\r\n                Greater then 8 characters with at least one lowercase, uppercase & special character\r\n            </mat-hint>\r\n\r\n            <mat-error *ngIf=\"errors.confirm || form.value.new != form.value.confirm\">\r\n                {{ errors.confirm }}\r\n                {{ form.value.new != form.value.confirm && errors.confirm ? ' & ' : '' }}\r\n                {{ form.value.new != form.value.confirm ? 'Passwords do not match!' : '' }}\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <button type=\"submit\" mat-flat-button color=\"primary\">\r\n            {{ loading ? '' : 'change password' }}\r\n\r\n            <mat-progress-spinner mode=\"indeterminate\" diameter=\"30\" *ngIf=\"loading\"></mat-progress-spinner>\r\n        </button>\r\n\r\n        <button type=\"button\" mat-stroked-button color=\"primary\" back-button>\r\n            back\r\n        </button>\r\n    </form>\r\n</mat-content>"],"sourceRoot":"webpack:///"}