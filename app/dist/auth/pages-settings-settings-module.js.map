{"version":3,"sources":["./src/app/pages/settings/settings.page.ts","./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings.module.ts"],"names":[],"mappings":"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","file":"pages-settings-settings-module.js","sourcesContent":["import { ButtonsService } from 'src/app/services/buttons/buttons.service';\r\nimport { SettingsService } from 'src/app/services/settings/settings.service';\r\nimport { OnInit, Component, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'settings-page',\r\n\tstyleUrls: ['./settings.page.scss'],\r\n\ttemplateUrl: './settings.page.html'\r\n})\r\n\r\nexport class SettingsPage implements OnInit, OnDestroy {\r\n\r\n\tconstructor(private buttons: ButtonsService, private service: SettingsService) { }\r\n\r\n\tpublic form: FormGroup = new FormGroup({\r\n\t\ttheme: new FormControl(this.service.theme.value == 'light' ? false : true, [Validators.required]),\r\n\t\tnotifications: new FormControl(this.service.notifications.value, [Validators.required])\r\n\t});\r\n\tpublic errors: any = {\r\n\t\ttheme: '',\r\n\t\tnotifications: ''\r\n\t};\r\n\tprivate subscriptions: any = {};\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.buttons.hide('add');\r\n\t\tthis.buttons.hide('close');\r\n\t\tthis.buttons.hide('filter');\r\n\t\tthis.buttons.hide('search');\r\n\r\n\t\tthis.subscriptions.theme = this.form.controls.theme.valueChanges.subscribe(theme => {\r\n\t\t\tif (theme) {\r\n\t\t\t\tthis.service.theme.next('dark');\r\n\t\t\t} else {\r\n\t\t\t\tthis.service.theme.next('light');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.subscriptions.notifications = this.form.controls.notifications.valueChanges.subscribe(notifications => {\r\n\t\t\tif (notifications) {\r\n\t\t\t\tthis.service.notifications.next(true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.service.notifications.next(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.theme.unsubscribe();\r\n\t\tthis.subscriptions.notifications.unsubscribe();\r\n\t}\r\n\r\n}\r\n","<form [formGroup]=\"form\" fxLayout=\"row\">\r\n    <mat-list fxFlex=\"50\" fxFlexOffset=\"25\" fxFlex.lg=\"70\" fxFlexOffset.lg=\"15\" fxFlex.md=\"80\" fxFlexOffset.md=\"10\" fxFlex.sm=\"90\" fxFlexOffset.sm=\"5\" fxFlex.xs=\"100\" fxFlexOffset.xs=\"0\">\r\n        <div mat-subheader>\r\n            Theme\r\n        </div>\r\n\r\n        <mat-list-item lines=\"full\">\r\n            <mat-label class=\"spacer\">\r\n                Dark Mode\r\n            </mat-label>\r\n\r\n            <mat-slide-toggle color=\"primary\" [checked]=\"form.value.theme\" formControlName=\"theme\"></mat-slide-toggle>\r\n        </mat-list-item>\r\n    </mat-list>\r\n</form>","/* --- PAGES --- */\r\nimport { SettingsPage } from './settings.page';\r\n\r\n/* --- MODULES --- */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: SettingsPage\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tFormsModule,\r\n\t\tCommonModule,\r\n\t\tMatIconModule,\r\n\t\tMatListModule,\r\n\t\tMatInputModule,\r\n\t\tMatButtonModule,\r\n\t\tMatSelectModule,\r\n\t\tMatTooltipModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatFormFieldModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tRouterModule.forChild(routes)\r\n\t],\r\n\tdeclarations: [\r\n\t\tSettingsPage\r\n\t]\r\n})\r\n\r\nexport class SettingsModule { }\r\n"],"sourceRoot":"webpack:///"}